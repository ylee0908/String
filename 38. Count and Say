def countAndSay(self, n: int) -> str:
        s = '1'
        for _ in range(n-1):
            count = 1
            temp = ''
            for i in range(1, len(s)):
                if s[i] == s[i-1]:
                    count += 1
                else:
                    temp += str(count) + s[i-1]
                    count = 1
                    i += 1
            temp += str(count) + s[-1]
            s = temp
        return s
    
 def countAndSay(self, n):
        res = "1"
        for _ in xrange(n-1):
            res = self.helper(res)
        return res

    def helper(self, n):
        count, i, res = 1, 0, ""
        while i < len(n) - 1:
            if n[i] == n[i+1]:
                count += 1
            else:
                res += str(count) + n[i]
                count = 1
            i += 1
        res += str(count) + n[i]
        return res

def countAndSay(self, n: int) -> str:
        s = '1'
        for i in range(n-1):
            s = self.nextNumber(s)
        return s
        
    def nextNumber(self, s):
        i = 0
        res = ''
        while i < len(s):
            count = 1
            while i+1 < len(s) and s[i]==s[i+1]:
                count += 1
                i +=1
            res += str(count) + s[i]
            i += 1
        return res
